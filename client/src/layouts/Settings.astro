---

---

<button class="absolute top-2 right-2 p-2 bg-light-primary rounded-lg w-12 h-12 text-white" id="settings_cog">
  <img src="/settings.svg" alt="⚙️" class="w-full h-full">
</button>

<div class="bg-primary flex hidden w-11/12 sm:w-2/3 h-fit rounded-lg transition-all p-6 pt-4 sm:pt-10 sm:p-12 gap-4 flex-col" id="settings">
  <section class="text-white text-lg font-bold flex flex-row flex-wrap justify-center items-center gap-2 sm:gap-4" id="blk_1-input">
    <h1>Block 1</h1>
    <input class="w-36 text-black font-normal pl-2">
  </section>
  <section class="text-white text-lg font-bold flex flex-row flex-wrap justify-center items-center gap-2 sm:gap-4" id="blk_2-input">
    <h1>Block 2</h1>
    <input class="w-36 text-black font-normal pl-2">
  </section>
  <section class="text-white text-lg font-bold flex flex-row flex-wrap justify-center items-center gap-2 sm:gap-4" id="blk_3-input">
    <h1>Block 3</h1>
    <input class="w-36 text-black font-normal pl-2">
  </section>
  <section class="text-white text-lg font-bold flex flex-row flex-wrap justify-center items-center gap-2 sm:gap-4" id="blk_4-input">
    <h1>Block 4</h1>
    <input class="w-36 text-black font-normal pl-2">
  </section>
  <section class="text-white text-lg font-bold flex flex-row flex-wrap justify-center items-center gap-2 sm:gap-4" id="blk_5-input">
    <h1>Block 5</h1>
    <input class="w-36 text-black font-normal pl-2">
  </section>
  <section class="text-white text-lg font-bold flex flex-row flex-wrap justify-center items-center gap-2 sm:gap-4" id="blk_6-input">
    <h1>Block 6</h1>
    <input class="w-36 text-black font-normal pl-2">
  </section>
  <section class="text-white text-lg font-bold flex flex-row flex-wrap justify-center items-center gap-2 sm:gap-4" id="blk_7-input">
    <h1>Block 7</h1>
    <input class="w-36 text-black font-normal pl-2">
  </section>

  <div class="flex justify-center flex-row items-center gap-2 h-auto">
    <button class="bg-light-primary text-white font-bold text-lg rounded-lg p-2 h-full" id="save">Save</button>
    <button class="bg-light-primary text-white font-bold text-sm sm:text-lg rounded-lg p-2 h-full" id="paste">Paste from Schoology</button>
  </div>
  
  <div class="flex justify-center items-center flex-col gap-2">
    <!-- Create a drop down -->
    <div class="flex flex-row gap-2 flex-wrap items-center justify-center">
      <button class="bg-light-primary text-white p-2 rounded-lg" id="dynbackground">Disable Dynamic Background</button>
      <button class="bg-light-primary text-white p-2 rounded-lg" id="removeCustomTheme">Remove Custom Theme</button>
      <select class="bg-light-primary text-white p-2 rounded-lg" value="default" id="theme_select">
        <option value="default">Default</option>
        <option value="salesian">Original Schedulology</option>
        <option value="hotdog">Hot Dog Stand</option>
      </select>
      <button class="bg-light-primary text-white p-2 rounded-lg" id="theme">Change Theme</button>
      <button class="bg-light-primary text-white p-2 rounded-lg" id="edit">
        <img src="/edit.svg" alt="✏️" class="w-6 h-6">
      </button>
    </div>
  </div>

</div>

<div class="fixed hidden w-screen z-40 h-screen flex justify-center items-center bg-black/25" id="paste_screen">
  <div class="rounded-lg w-3/4 sm:w-7/12 flex justify-center items-center flex-col bg-primary">
    <div class="w-full text-left text-white text-lg bg-light-primary flex flex-row p-2">
      Paste from Schoology
      <button class="relative ml-auto bg-light-primary rounded-lg w-12 h-full text-white" id="close_paste">
        ❌
      </button>
    </div>

    <img src="/howtocopy.gif" alt="Open the Schoology Courses tab and type CTRL + A and CTRL + C. Then, type CTRL + V in the 'Paste Here' field." class="w-full h-full">
    <div class="text-white p-2 text-left flex justify-center items-center flex-col gap-2">      
      <div class="flex flex-row gap-2">
        <h1>Paste Here:</h1>
        <textarea class="text-black" id="pasted_text" />
      </div>

      <button class="bg-light-primary text-white font-bold text-lg rounded-lg h-8 w-24" id="paste_confirm">Confirm</button>
    </div>
  </div>
</div>

<script defer>
  document.getElementById("blk_1-input").children[1].value = localStorage.getItem("blk_1") || "Block 1";
  document.getElementById("blk_2-input").children[1].value = localStorage.getItem("blk_2") || "Block 2";
  document.getElementById("blk_3-input").children[1].value = localStorage.getItem("blk_3") || "Block 3";
  document.getElementById("blk_4-input").children[1].value = localStorage.getItem("blk_4") || "Block 4";
  document.getElementById("blk_5-input").children[1].value = localStorage.getItem("blk_5") || "Block 5";
  document.getElementById("blk_6-input").children[1].value = localStorage.getItem("blk_6") || "Block 6";
  document.getElementById("blk_7-input").children[1].value = localStorage.getItem("blk_7") || "Block 7";

  document.getElementById("dynbackground").textContent = localStorage.getItem("dynamic_theme") === "true" || !localStorage.getItem("dynamic_theme") ? "Disable Background" : "Enable Background";

  document.getElementById("dynbackground").addEventListener("click", () => {
    const dynbackground = document.getElementById("dynbackground");
    if (dynbackground.textContent === "Disable Dynamic Background") {
      dynbackground.textContent = "Enable Dynamic Background";
      localStorage.setItem("dynamic_theme", "false");
    }
    else {
      dynbackground.textContent = "Disable Dynamic Background";
      localStorage.setItem("dynamic_theme", "true");
    }
    window.location.reload();
  });

  document.getElementById("theme_select").value = localStorage.getItem("theme") || "default";
  document.getElementById("theme").addEventListener("click", () => {
    const theme_select = document.getElementById("theme_select");
    localStorage.setItem("theme", theme_select.value);
    window.location.reload();
  });
  
  function toggleSettings() {
    const settings = document.getElementById("settings")
    const mainschedule = document.getElementById("main_schedule")
    if (!settings.classList.contains("hidden")) {
      mainschedule.classList.remove("hidden");
      settings.classList.add("hidden");
    }
    else {
      mainschedule.classList.add("hidden");
      settings.classList.remove("hidden");
    }
  }

  document.getElementById("paste").addEventListener("click", () => {
    const paste_screen = document.getElementById("paste_screen")
    paste_screen.classList.remove("hidden");
  });

  document.getElementById("paste_confirm").addEventListener("click", () => {
    /**
     * @type {string}
     */
    const pasted_text = document.getElementById("pasted_text").value;
    let regex_pasted = /(.*)\nBlock (\d)/g;
    let result;
    pasted_text.match(regex_pasted).forEach((match) => {
      let match_found = match.split("\n");
      let block = match_found[1].split(" ")[1];
      let block_name = match_found[0];
      document.getElementById(`blk_${block}-input`).children[1].value = block_name;
    })
    const paste_screen = document.getElementById("paste_screen")
    paste_screen.classList.add("hidden");
  });

  document.getElementById("close_paste").addEventListener("click", () => {
    const paste_screen = document.getElementById("paste_screen")
    paste_screen.classList.add("hidden");
  });

  document.getElementById("save").addEventListener("click", () => {
    const blk_1 = document.getElementById("blk_1-input").children[1].value;
    const blk_2 = document.getElementById("blk_2-input").children[1].value;
    const blk_3 = document.getElementById("blk_3-input").children[1].value;
    const blk_4 = document.getElementById("blk_4-input").children[1].value;
    const blk_5 = document.getElementById("blk_5-input").children[1].value;
    const blk_6 = document.getElementById("blk_6-input").children[1].value;
    const blk_7 = document.getElementById("blk_7-input").children[1].value;

    localStorage.setItem("blk_1", blk_1);
    localStorage.setItem("blk_2", blk_2);
    localStorage.setItem("blk_3", blk_3);
    localStorage.setItem("blk_4", blk_4);
    localStorage.setItem("blk_5", blk_5);
    localStorage.setItem("blk_6", blk_6);
    localStorage.setItem("blk_7", blk_7);

    toggleSettings();
    document.getElementById("classes").innerHTML = "";
  });

  document.getElementById("settings_cog").addEventListener("click", toggleSettings);

  const mq = window.matchMedia( "(max-width: 760px)" );
  if (mq.matches) {
    let themeSelected = localStorage.getItem("theme") || "default";
    let editorButton = document.getElementById("edit");
    editorButton.id = "preventTheme2";
    document.getElementById("preventTheme2").addEventListener("click", () => {
      if (localStorage.getItem(`editorThemeClear.${themeSelected}`)) {
        localStorage.removeItem(`editorThemeClear.${themeSelected}`);
        location.reload();
        return;
      }
      let allowed = confirm(
        "Are you sure you want to prevent this theme from applying?\n" + 
        "➡️ This will give you an empty slate, essentially making the current theme applied be the default theme.\n" +
        "➡️ This will allow you to make as many edits to the theme as you like.\n" +
        "➡️ You can undo this by clicking the button again."
      );
      if (!allowed) return;

      localStorage.setItem(`editorThemeClear.${themeSelected}`, "true");
      location.reload();
    });
    document.getElementById("preventTheme2").textContent = localStorage.getItem(`editorThemeClear.${themeSelected}`) ? "Enable Theme" : "Disable Theme";  }
  else {
    document.getElementById("edit").classList.remove("hidden");
  }
  if (document.getElementById("edit"))
    document.getElementById("edit").addEventListener("click", () => {
      const themeEditor = document.getElementById("themeEditor");
      if (themeEditor.style.display === "block") {
        return;
      }
      themeEditor.style.display = "block";
      themeEditor.animate([
        { transform: "translateX(-100%)" },
        { transform: "translateX(0)" }
      ], {
        duration: 510,
        easing: "ease-in-out"
      });
    });
  
  document.getElementById("removeCustomTheme").addEventListener("click", () => {
    let themeSelected = localStorage.getItem("theme") || "default";
    localStorage.removeItem(`savedEditor.${themeSelected}`);
    location.reload();
  });
</script>